@import "compass/css3";
@import "compass/typography/vertical_rhythm";

@mixin rwd-width($el-width, $parent-width: $standard) {
    width: $el-width * 100% / $parent-width;
}

@mixin adjust-font-size-to($to-size, $lines: lines-for-font-size($to-size), $from-size: $base-font-size) {
    @if not $relative-font-sizing and $from-size != $base-font-size {
        @warn "$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to";
    }
    font-size: $font-unit * $to-size / $from-size;
}

$experimental-support-for-svg: true;
$base-font-family: Arial, Helvetica, sans-serif;
// $base-font-size: 16px;
$base-font-color: #444;
$base-link-color: #287fc3;
$standard: 400px;
// $tablet: 768px;
// $mobile: 480px;
// $min-width: 240px;
$footer-height: 100px;
$field-height: 30px;

// ** Pseudo
@mixin pseudo-style{
    content: '';
    position: absolute;
}
// ** Align icons
@mixin align-icon($top){
    position: relative;
    top: -#{$top}px;
}
// ** Arrows
@mixin arrowBorder($side, $height, $color){
    $mirrorSide: opposite-position($side);
    border:{
        #{$side}:{
            width: $height;
            color: $color;
        }
        #{$mirrorSide}:{
            width: 0;
        }
    }
}
@mixin arrow($side, $width, $height, $color, $once: true, $pos: true){
    @if $once{
        @include pseudo-style;
    }

    @if $pos{
        $secPos: null;
        @if $side == $top or $side == $bottom{ $secPos: $left}
        @else{ $secPos: $top }

        #{$side}: 100%;
        #{$secPos}: 50%;
        margin-#{$secPos}: -#{$width}/2;
    }
    @else{
        @content;
    }

    border: $width solid transparent;
    @include arrowBorder($side, $height, $color);
}
@mixin reset-html5 {
    #{elements-of-type(html5-block)} {
        display: block;
    }
}